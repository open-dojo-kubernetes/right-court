buildscript {
	ext {
		springBootVersion = '2.1.0.RELEASE'
		lombokPluginVersion = '1.14'
		sonarQubeVersion='2.6.2'
	}
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "io.franzbecker:gradle-lombok:${lombokPluginVersion}"
		classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:${sonarQubeVersion}"
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'io.franzbecker.gradle-lombok'
apply plugin: 'org.sonarqube'


lombok {
	sha256 = ""
	version = '1.18.4'
}

group = 'br.pegz.tutorials'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 11

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/milestone" }
}


ext {
	springCloudVersion = 'Finchley.M8'
	junit5Version = '5.2.0'
	lombokVersion = '1.18.4'
}

dependencies {
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
	compile group:'org.springframework.boot', name: 'spring-boot-starter-data-redis'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-amqp'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-webflux'
	compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-hystrix'
	compile group: 'org.springframework.cloud', name: 'spring-cloud-stream-reactive'
	compile group: 'org.springframework.retry', name: 'spring-retry'
	compileOnly group: 'org.projectlombok', name: 'lombok'
	testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
	testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junit5Version
	testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: junit5Version
	testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junit5Version

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()

	testLogging {
		events "passed", "skipped", "failed"
	}

	reports {
		html.enabled = true
	}
}
